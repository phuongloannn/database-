CREATE DATABASE MatPet_Group2
USE MatPet_Group2
lijj
CREATE TABLE Customer (
  [Customer ID]    INT NOT NULL PRIMARY KEY,
  [Full Name]      NVARCHAR (50)  NOT NULL,
  [Phone Number]   VARCHAR (10) UNIQUE,
  [Pet Name]       VARCHAR (5)  NOT NULL,
  [Total Purchase Bonus Point] INT NULL,
  [Total Service Bonus Point]  INT NOT NULL,
  [Total Bonus Point]          INT NOT NULL,);
INSERT INTO CUSTOMER ([Customer ID], [Full Name], [Phone Number], [Pet Name], [Total Purchase Bonus Point], [Total Service Bonus Point], [Total Bonus Point])
VALUES
(101,'Hoàng Tiến Đức',0822364711,'Bella',60,3,60),
(102,'Trần Hương Ly',0828556106,'Pig',35,21,56),
(103,'Phạm Thảo Hương',0329664813,'Mia',75,21,36),
(104,'Hoàng Trần Minh Anh',0914627395,'May',50,26,76),
(105,'Hoàng Nam Minh',0956192264,'Jerry',40,20,60),
(106,'Trần Hoàng Anh',0328564788,'Haili',40,22,62),
(107,'Phạm Thanh Hải',0898005215,'Chick',30,15,45);
SELECT*FROM Customer
DROP TABLE Customer ;
CREATE TABLE Pet_Service (
  [Pet ID] INT identity (1,1) NOT NULL PRIMARY KEY,
  [Customer ID]  INT NOT NULL FOREIGN KEY REFERENCES Customer ([Customer ID]),
  [Pet Name]     NVARCHAR (20) NOT NULL,
  [Breeds]       VARCHAR (50)  NULL,
  [Weighed]      VARCHAR (10)  NOT NULL,

  [Characteristics]VARCHAR(100),
  [Accessory]      VARCHAR(100) NULL, 
  [Service Use]    VARCHAR(10)  UNIQUE,
  [Start time]     VARCHAR(100),
  [End time]       VARCHAR(100),)      
INSERT INTO Pet_Service ([Pet ID], [Customer ID], [Pet Name], [Breeds], [Weighed],[Characteristics], [Accessory], [Service Use],[Start time] ,[End time])

VALUES
(1,101,'Bella','Persian Cat',2,'Calm, friendly','Bandana','Beautify','2023-01-15 06:30','2023-01-15 07:30'),
(2,102,'Pig','Beagle',5,'friendly','Hat, leash','Spa','2023-03-10 8:30','2023-03-10 10:00'),
(3,103,'Mia','Labrador',8,'Fluffy,sleek','Ball','Hotel','2023-06-8 10:20','2023-06-9 10:20'),
(4,104,'May','Persian Cat',7,'Energetic	brassiere','Hotel','2023-10-6 08:00','2023-10-7 08:00'),
(5,104,'May','Persian Cat',7,'Energetic	brassiere','Beautify','2023-10-7 08:30','2023-10-7 9:00'),
(6,105,'Jerry','Siamese Cat',8,'Talkative, fluffy','leash','Hotel','2023-10-9 14:12','2023-10-10 14:12'),
(7,106,'Haili','Labrador',3,'Energetic, Talkative','Bow tie, hat','Spa','2023-11-15 13:45','2023-11-15 15:45'),
(8,106,'Haili','Labrador',3,'Energetic, Talkative','Bow tie, hat','Beautify','2023-11-15 15:45','2023-11-15 15:45'),
(9,107,'Voi','Persian Cat',5,'Friendly, Talkative','Hat','Spa','2023-12-24 15:30','2023-12-24 16:30');


ALTER TABLE Pet_Service ADD FOREIGN KEY ([Customer ID])
REFERENCES Customer ([Customer ID]);
ALTER TABLE Pet_Service ADD FOREIGN KEY ([Service Use])
REFERENCES Cus_Services ([Service Use]);

SELECT FROM Pet_Service 
DROP TABLE Pet_Service ;

CREATE TABLE Cus_Services (
  [Service Use]        VARCHAR (20) PRIMARY KEY,
  [Dog Price]          VARCHAR (30),
  [SmallCat Price]     VARCHAR (30),
  [LargeCat Price]     VARCHAR (30),)
INSERT INTO Cus_Services ([Service Use], [Dog Price], [SmallCat Price],[LargeCat Price] )
VALUES

('Beautify'',50.000VND','30.000VND','60.000VND'),
('Hotel','210.000VND per day','160.000VND per day','200.000VND per day'),
('Spa','170.000VND per time','100.000VND per time','150.000VND per time');
DROP TABLE Cus_Services
SELECT* FROM Cus_Services;

CREATE TABLE Purchase (
  [Purchase ID]           INT identity (1,1) NOT NULL PRIMARY KEY,
  [Customer ID]           INT NOT NULL FOREIGN KEY REFERENCES Customer ([Customer ID]),
  [Product Code]          NVARCHAR (4) NOT NULL FOREIGN KEY REFERENCES Warehouse ([Product Code]),
  [Quantity Purchase]     INT NOT NULL,
  [Price]                 INT NOT NULL,
  [Purchase]              VARCHAR(100),
  [Purchase Bonus Point]  INT NULL,
  [Phone Number]          VARCHAR (10), 
  );           
INSERT INTO Purchase ([Customer ID], [Product Code], [Quantity Purchase], [Price],[Purchase], [Purchase Bonus Point], [Phone Number])
VALUES
(101,'A3',2,600000,'2023-01-15 08:30',60,0822364711),
(102,'A6',1,350000,'2023-03-10 10:20',35,0828556106),
(103,'A5',3,700000,'2023-06-9 10:20',75,0329664813),
(104,'A11',2,500000,'2023-10-7 08:00',50,0914627395),
(105,'A10',1,400000,'2023-10-10 14:12',40,0956192264),
(106,'C1',2,400000,'2023-11-15 15:45',40,0328564788),
(107,'C4',3,300000,'2023-12-25 07:30',30,0898005215);
ALTER TABLE Purchase ADD FOREIGN KEY ([Customer ID]) 
REFERENCES  Customer ([Customer ID]);
ALTER TABLE Purchase ADD FOREIGN KEY ([Product Code]) 
REFERENCES Warehouse ([Product Code]);

SELECT*FROM Purchase
DROP TABLE Purchase;


CREATE TABLE Employee (
  [EMP ID]        CHAR (10) PRIMARY KEY UNIQUE,
  [Full Name]     NVARCHAR (20) NOT NULL,
  [EMP Gender]    VARCHAR (6),
  Dob             DATE,
  [EMP Email]     CHAR (30),
  [Contact Num]   INT);
INSERT INTO Employee ([EMP ID], [Full Name], [EMP Gender], Dob, [EMP Email], [Contact Num])
VALUES
        ('1', 'Đàm Văn Tài', 'Male', '2004-10-16', 'damvantai@gmail.com', '388595898'),
       ('2', 'Trần Tuân Anh', 'Male', '2004-01-01', 'Trantuananh@gmail.com', '963880374'),
       ('3', 'Phương Loan', 'Female', '2004-02-02', 'Phuongloan@gmail.com', '859025735'),
       ('4', 'Bích Ngoc', 'Female', '2004-03-03', 'bichngoc@gmail.com', '355491959'),
       ('5', 'Trần Thị Trang', 'Female', '2004-04-04', 'trangtran@gmail.com', '994489459'),
       ('6', 'Nguyễn Thương Thảo', 'Female', '2004-02-16', 'thao@gmail.com', '022442314'),
       ('7', 'Trinh Mai Phương', 'Female', '2004-01-13', 'maiphuong@gmail.com', '012747474'),
       ('8', 'Nguyễn Minh Quân', 'Male', '2004-02-28', 'quan@gmail.com', '0977532821'),
       ('9', 'Xuân Bách', 'Male', '2004-10-09', 'bach@gmail.com', '0283276354'),
       ('10', 'Hữu Nghi', 'Male', '2004-04-01', 'nghi@gmail.com', '082732863');

ALTER TABLE Employee ADD FOREIGN KEY ([EMP ID]) 
REFERENCES Personal_Job ([EMP ID]);

DROP TABLE Employee
SELECT*FROM Employee;

CREATE TABLE Payment (
  Job CHAR (30) PRIMARY KEY,
  [Part Time] CHAR (30),
  [Full Time] CHAR (30),
  Bonus CHAR (30));
INSERT INTO Payment (Job, [Part Time], [Full Time], Bonus)
VALUES
('Accountant', 25000, 300000, '15.000VND/hour'),
('Customer service', NULL, 200000, '15.000VND/hour'),
('Employee management', NULL, 200000, '25.000VND/hour'),
('Pet service provider', 25000, 300000, '15.000VND/hour'),
('Storage management', NULL, 200000, '25.000VND/hour');

DROP TABLE Payment
SELECT*FROM Payment;


CREATE TABLE Personal_Job (
  [EMP ID] CHAR (10) PRIMARY KEY UNIQUE ,
  [Full Name] NVARCHAR (20) NOT NULL,
  Job CHAR (30),
  Schedule CHAR (10),
  );
INSERT INTO Personal_Job ([EMP ID], [Full Name], Job, Schedule)
VALUES
      ('3', 'Phương Loan', 'Customer service', 'partime'),
       ('2', 'Trần Tuấn Anh', 'Customer service', 'partime'),
       ('1', 'Đàm Văn Tài', 'Pet service provider', 'partime'),
       ('4', 'Bích Ngọc', 'Storage management', 'fulltime'),
       ('5', 'Trần Thị Trang', 'Pet service provider', 'fulltime'),
       ('6', 'Nguyễn Thương Thảo', 'Storage management', 'partime'),
       ('7', 'Trịnh Mai Phương', 'Customer service', 'partime'),
       ('8', 'Nguyễn Minh Quân', 'Customer service', 'fulltime'),
       ('9', 'Xuân Bách', 'Pet service provider', 'fulltime'),
       ('10', 'Hữu Nghị', 'Storage management', 'partime');

SELECT*FROM Personal_Job
DROP TABLE Personal_Job;

CREATE TABLE Per_Shift (
  [EMP ID] CHAR (10) NOT NULL PRIMARY KEY,
  [Full Name] NVARCHAR (20) NOT NULL,
  Monday CHAR (30),
  Tuesday ChAR (30),
  Thursday CHAR (30),
  Friday CHAR (30),
  Saturday CHAR (30),
  Sunday CHAR (30));
INSERT INTO Per_Shift ([EMP ID]), [Full Name], Monday, Tuesday, Thursday, Friday, Saturday, Sunday)
VALUES
      ('1', 'Đàm Văn Tài', 'none', 'afternoon', 'night', 'none', 'afternoon', 'night', 'none'),
       ('2', 'Trần Tuấn Anh', 'night', 'afternoon', 'morning', 'night', 'afternoon', 'morning', 'none'),
       ('3', 'Phương Loan', 'morning', 'morning', 'morning', 'morning', 'morning', 'morning', 'none'),
       ('4', 'Bích Ngọc', 'fullday', 'fullday', 'fullday', 'fullday', 'fullday', 'fullday', 'none'),
       ('5', 'Trần Thị Trang', 'fullday', 'fullday', 'fullday', 'fullday', 'fullday', 'fullday', 'none'),
       ('6', 'Nguyễn Thương Thảo', 'morning', 'morning', 'afternoon', 'afternoon', 'night', 'night', 'none'),
       ('7', 'Trịnh Mai Phương', 'night', 'night', 'night', 'night', 'night', 'night', 'none'),
       ('8', 'Nguyễn Minh Quân', 'morning', 'morning', 'morning', 'morning', 'morning', 'morning', 'none'),
       ('9', 'Xuân Bách', 'afternoon', 'afternoon', 'afternoon', 'afternoon', 'afternoon', 'afternoon', 'none'),
       ('10', 'Hữu Nghị', 'night', 'night', 'night', 'night', 'night', 'night', 'none');
ALTER TABLE Per_Shift ADD FOREIGN KEY ([EMP ID]) 
REFERENCES Personal_Job ([EMP ID]);
SELECT*FROM Per_Shift
DROP TABLE Per_Shift;

CREATE TABLE Warehouse (
  [Product Code] NVARCHAR (4) PRIMARY KEY,
  Type CHAR (50) NOT NULL,
  [Product Name] VARCHAR (50) NOT NULL,
  Brand VARCHAR (50),
  [Input Day] DATE NOT NULL,
  [Supplier Phone Number] CHAR (50) NOT NULL,
  Price INT NOT NULL,
  Quantity INT NOT NULL);

INSERT INTO Warehouse ([Product Code], Type, [Product Name], Brand, [Input Day], [Supplier Phone Number], Price, Quantity, )

VALUES
('A1','Other_accessories','Necklace','A',22/12/2023,0987875621,50000,100),
('A2','Other_accessories','Ball for dog','A',22/12/2023,0987875621,20000,100),
('A3','Other_accessories','Claw tree','A',22/12/2023,0987875621,300000,100),
('A4','Other_accessories','Eating bowl','A',22/12/2023,0987875621,100000,100),
('A5','Other_accessories','Small size sleeping mattress','A',22/12/2023,0987875621,250000,100),
('A6','Other_accessories','Big size sleeping mattress','A',22/12/2023,0987875621,350000,100),
('A7','Other_accessories','Small size shipping cage','A',22/12/2023,0987875621,120000,100),
('A8','Other_accessories','Big size shipping cage','A',22/12/2023,0987875621,200000,100),
('A9','Other_accessories','Small size backpack','A',22/12/2023,0987875621,300000,100),
('A10','Other_accessories','Big size backpack','A',22/12/2023,0987875621,400000,100),
('A11','Other_accessories','Toilet','A',22/12/2023,0987875621,250000,100),
('C1','Care_item','Shower gel','B',22/12/2023,0127589234,200000,100),
('C2','Care_item','Anti-fungal shower gel','B',22/12/2023,0127589234,250000,100),
('C3','Care_item','Fruity shower gel','B',22/12/2023,0127589234,250000,100),
('C4','Care_item','Ear cleaner','B',22/12/2023,0127589234,100000,100),
('C5','Care_item','Mint mouthwash','B',22/12/2023,0127589234,120000,100),
('C6','Care_item','Eye wash water','B',22/12/2023,0127589234,150000,100),
('C7','Care_item','Anti-lice ointment','B',22/12/2023,0127589234,100000,100),
('C8','Care_item','Topical antifungal medicine','B',22/12/2023,0127589234,150000,100),
('F1','Food','Grains for dog','C',22/12/2023,0354942315,270000,100),
('F2','Food','Grains for cat','C',22/12/2023,0354942315,250000,100),
('F3','Food','Pate for dog','C',22/12/2023,0354942315,320000,100),
('F4','Food','Pate for cat','C',22/12/2023,0354942315,300000,100),
('F5','Food','Milk ','C',22/12/2023,0354942315,100000,100),
('S1','Sand','Genki sand','D',22/12/2023,0917078700,72000,100),
('S2','Sand','Litter sand','D',22/12/2023,0917078700,125000,100),
('S3','Sand','Love sand','D',22/12/2023,0917078700,136000,100);
SELECT*FROM Warehouse
DROP TABLE Warehouse;

CREATE TABLE Input_2023 (
  [Product Code] NVARCHAR (4) PRIMARY KEY,
  [Input Day]    DATE NOT NULL,
  MFX            DATE NOT NULL,
  E_XP           DATE NOT NULL,
  Input Price    INT NOT NULL,
  Quantity        INT NULL, )
INSERT INTO Input_2023 ([Product Code], [Input Day], MFX, E_XP,Input Price, Quantity)
VALUES

('A1',22/12/2023,20/12/2023,20/12/2024,0987875621,30000,100),
('A2',22/12/2023,20/12/2023,20/12/2024,0987875621,15000,100),
('A3',22/12/2023,20/12/2023,20/12/2024,0987875621,250000,100),
('A4',22/12/2023,20/12/2023,20/12/2024,0987875621,70000,100),
('A5',22/12/2023,20/12/2023,20/12/2024,0987875621,200000,100),
('A6',20/12/2023,20/12/2024,0987875621,300000,100),
('A7',22/12/2023,20/12/2023,20/12/2024,0987875621,100000,100),
('A8',22/12/2023,20/12/2023,20/12/2024,0987875621,170000,100),
('A9',22/12/2023,20/12/2023,20/12/2024,0987875621,220000,100),
('A10',22/12/2023,20/12/2023,20/12/2024,0987875621,320000,100),
('A11',22/12/2023,20/12/2023,20/12/2024,0987875621,200000,100),
('C1',22/12/2023,20/12/2023,20/12/2024,0127589234,180000,100),
('C2',22/12/2023,20/12/2023,20/12/2024,0127589234,210000,100),
('C3',22/12/2023,20/12/2023,20/12/2024,0127589234,210000,100),
('C4',22/12/2023,20/12/2023,20/12/2024,0127589234,70000,100),
('C5',22/12/2023,20/12/2023,20/12/2024,0127589234,90000,100),
('C6',22/12/2023,20/12/2023,20/12/2024,0127589234,110000,100),
('C7',22/12/2023,20/12/2023,20/12/2024,0127589234,70000,100),
('C8',22/12/2023,20/12/2023,20/12/2024,0127589234,110000,100),
('F1',22/12/2023,20/12/2023,20/12/2024,0354942315,220000,100),
('F2',22/12/2023,20/12/2023,20/12/2024,0354942315,200000,100),
('F3',22/12/2023,20/12/2023,20/12/2024,0354942315,280000,100),
('F4',22/12/2023,20/12/2023,20/12/2024,0354942315,260000,100),
('F5',22/12/2023,20/12/2023,20/12/2024,0354942315,70000,100),
('S1',22/12/2023,20/12/2023,20/12/2024,0917078700,50000,100),
('S2',22/12/2023,20/12/2023,20/12/2024,0917078700,90000,100),
('S3',22/12/2023,20/12/2023,20/12/2024,0917078700,100000,100);
=======
('A1',20/12/2023,20/12/2024,0987875621,30000,100),
('A2',20/12/2023,20/12/2024,0987875621,15000,100),
('A3',20/12/2023,20/12/2024,0987875621,250000,100),
('A4',20/12/2023,20/12/2024,0987875621,70000,100),
('A5',20/12/2023,20/12/2024,0987875621,200000,100),
('A6',20/12/2023,20/12/2024,0987875621,300000,100),
('A7',20/12/2023,20/12/2024,0987875621,100000,100),
('A8',20/12/2023,20/12/2024,0987875621,170000,100),
('A9',20/12/2023,20/12/2024,0987875621,220000,100),
('A10',20/12/2023,20/12/2024,0987875621,320000,100),
('A11',20/12/2023,20/12/2024,0987875621,200000,100),
('C1',20/12/2023,20/12/2024,0127589234,180000,100),
('C2',20/12/2023,20/12/2024,0127589234,210000,100),
('C3',20/12/2023,20/12/2024,0127589234,210000,100),
('C4',20/12/2023,20/12/2024,0127589234,70000,100),
('C5',20/12/2023,20/12/2024,0127589234,90000,100),
('C6',20/12/2023,20/12/2024,0127589234,110000,100),
('C7',20/12/2023,20/12/2024,0127589234,70000,100),
('C8',20/12/2023,20/12/2024,0127589234,110000,100),
('F1',20/12/2023,20/12/2024,0354942315,220000,100),
('F2',20/12/2023,20/12/2024,0354942315,200000,100),
('F3',20/12/2023,20/12/2024,0354942315,280000,100),
('F4',20/12/2023,20/12/2024,0354942315,260000,100),
('F5',20/12/2023,20/12/2024,0354942315,70000,100),
('S1',20/12/2023,20/12/2024,0917078700,50000,100),
('S2',20/12/2023,20/12/2024,0917078700,90000,100),
('S3',20/12/2023,20/12/2024,0917078700,100000,100);

ALTER TABLE Input_2023 ADD FOREIGN KEY ([Product Code])
REFERENCES Warehouse ([Product Code]);
SELECT*FROM Input_2023;
DROP TABLE Input_2023;


---1.A trigger for inserting a time of purchase that must not be before the year 2023
SELECT*FROM Warehouse
GO
CREATE TRIGGER Inserttime on Warehouse with encryption for insert as
BEGIN
IF (exists (SELECT*FROM Inserted where datepart (year.Input_day)<2023))
BEGIN 
PRINT 'Invalid with Input_day';
Rollback tran;
END;
END;
DROP TRIGGER Inserttime
---2. Look up product names from manufacturer A
SELECT [Product Name]
From Warehouse
WHERE Brand ='A'
---3. Look up product foods 
SELECT*FROM Warehouse
WHERE Type = 'food'
---4. Total expenditure
SELECT sum ([Input Price]) as 'Total Expenditure' FROM Warehouse
---5. Find the phone number of the merchant
SELECT [Supplier phone number]
FROM Warehouse
WHERE Brand = 'ForCat'
---6. Find the shift based on the employee ID
CREATE proc SP_ViewWork (@EMP_ID CHAR (10) ) as
BEGIN 
IF (exists (SELECT*FROM Per_Shift WHERE EMP_ID = @EMP_ID))
BEGIN 
SELECT*FROM Per_Shift WHERE EMP_ID = @EMP_ID;
END
ELSE
BEGIN
PRINT 'Not Found';
END
END;

exec SP_ViewWork 002;
---7. Find the contact information of an employee in day.
SELECT [Contact Num]
FROM Employee
WHERE FullName = N'Trần Bảo An'
---8. Total revenue earned in a day
SELECT sum ([Price]) as 'Total Service Price' FROM Pet_Service
SELECT sum ([Price]) as 'Total Purchase Price' FROM Purchase
---9. Manage the number of dogs and cats going to the spa/beauty salon / Receive the number of dogs and cats at the hotel for the day.
GO
CREATE  proc SP_ViewPetServiceUsed (@SerUse VARCHAR (20) ) as
BEGIN
IF (exists (SELECT*FROM Pet_Service WHERE ([Service Use]) = @SerUse) )
BEGIN
SELECT*FROM Pet_Service WHERE ([Service Use]) = @SerUse) )
END
ELSE
BEGIN
PRINT 'Not found';
END
END;

GO
exec SP_ViewPetServiceUsed 'Beautify';
---10. Retrieve the purchase history of a customer based on Customer ID
GO
ALTER proc SP_billByCustomerID (@CusID INT) as
BEGIN
IF (exists (SELECT*FROM Purchase WHERE ([Customer ID]) = @CusID) )
BEGIN
SELECT*FROM Purchase WHERE ([Customer ID]) = @CusID;
END
ELSE
BEGIN
PRINT 'Chưa có đơn hàng'
END
END;
GO
exec SP_billByCustomerID '4';




  
  








  
  
  






